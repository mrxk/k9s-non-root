plugins:
  local-shell:
    shortCut: Ctrl-L
    confirm: false
    description: Local shell
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - PS1="${CLUSTER}:\w$ " bash -i
  json-log-viewer:
    shortCut: Ctrl-J
    confirm: false
    description: JSON log viewer
    scopes:
      - containers
      - pods
    command: bash
    background: false
    args:
      - -c
      - |
        # Get the initial log content with timestamps
        clear
        POD_NAME="${POD}"
        CONTAINER_NAME="${NAME}"
        if [ "${POD_NAME}" = "" ]
        then
          POD_NAME="${CONTAINER_NAME}"
          CONTAINER_NAME=$(gum choose --select-if-one $(kubectl get pods -n "${NAMESPACE}" "${CONTAINER_NAME}" -o json | jq -r '(.spec.containers[]?|.name), (.spec.initContainers[]?|.name)'))
        fi
        kubectl --context "${CONTEXT}" logs -n "${NAMESPACE}" "${POD_NAME}" -c "${CONTAINER_NAME}" --timestamps > "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}.ts"
        # Get the latest timestamp
        ts=$(tail -1 "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}.ts" | cut -f1 -d' ')
        # Remove timestamps from initial log
        cut -f2- -d' ' "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}.ts" > "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}"
        # Begin streaming the rest of the logs
        kubectl --context "${CONTEXT}" logs -f -n "${NAMESPACE}" "${POD_NAME}" -c "${CONTAINER_NAME}" --since-time "${ts}" >> "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}" &
        # Show log
        jlv "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}"
        # Kill streamer
        kill %1
        # Clean up
        rm -f "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}"
        rm -f "/tmp/${NAMESPACE}.${POD_NAME}.${CONTAINER_NAME}.ts"
        exit 0
