plugins:
  local-shell:
    shortCut: Ctrl-L
    confirm: false
    description: Local shell
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - PS1="${CLUSTER}:\w$ " bash -i
  json-log-viewer:
    shortCut: Ctrl-J
    confirm: false
    description: JSON log viewer
    scopes:
      - containers
      - pods
    command: bash
    background: false
    args:
      - -c
      - |
        # Get the initial log content with timestamps
        if [ "${POD}" = "" ]
        then
          kubectl --context "${CONTEXT}" logs -n "${NAMESPACE}" "${NAME}" --timestamps > "/tmp/${NAMESPACE}.${POD}.${NAME}.ts"
        else
          kubectl --context "${CONTEXT}" logs -n "${NAMESPACE}" "${POD}" -c "${NAME}" --timestamps > "/tmp/${NAMESPACE}.${POD}.${NAME}.ts"
        fi
        # Get the latest timestamp
        ts=$(tail -1 "/tmp/${NAMESPACE}.${POD}.${NAME}.ts" | cut -f1 -d' ')
        # Remove timestamps from initial log
        cut -f2- -d' ' "/tmp/${NAMESPACE}.${POD}.${NAME}.ts" > "/tmp/${NAMESPACE}.${POD}.${NAME}"
        # Begin streaming the rest of the logs
        if [ "${POD}" = "" ]
        then
          kubectl --context "${CONTEXT}" logs -f -n "${NAMESPACE}" "${NAME}" --since-time "${ts}" >> "/tmp/${NAMESPACE}.${POD}.${NAME}" &
        else
          kubectl --context "${CONTEXT}" logs -f -n "${NAMESPACE}" "${POD}" -c "${NAME}" --since-time "${ts}" >> "/tmp/${NAMESPACE}.${POD}.${NAME}" &
        fi
        # Show log
        jlv "/tmp/${NAMESPACE}.${POD}.${NAME}"
        # Kill streamer
        kill %1
        # Clean up
        rm -f "/tmp/${NAMESPACE}.${POD}.${NAME}"
        rm -f "/tmp/${NAMESPACE}.${POD}.${NAME}.ts"
        exit 0
